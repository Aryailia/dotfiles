" URI can come without schemes
"if exists(s:thenameofthispluginloaded)
"  finish
"endif

nnoremap <Leader>zx :call SelectNextURI()<CR>

function! SelectNextURI()
  " let l:link .= l:hostname_character . '\(\.' . l:hostname_character . '\)*'
  let l:asdf=" | startpage  | https://www.startpage.com/do/search?query=%s       |"
  let l:asdf="asdf ./qewr"

  "echo matchstr(getlinec'.'), l:link)
  echo matchstrpos(l:asdf, s:link) . 'asdf'
endfunction


let s:quoted = "'[^']\\+'" . '\|".\+"'
let s:quoted = "'.\+'"


let s:username_character = '[-A-Za-z_]'
let s:password_character = '[-A-Za-z0-9_%_;=+.~#@?&/!;,]'
let s:hostname_character = '[-A-Za-z0-9%_]'
let s:pathname_character = l:password_character


let s:link = '\m'

" Scheme and login info, right now  everything optional
" If username given, then scheme given
" If password given, then username and scheme given
" Although \? supposedly is greedy, still need something non-empty after it
"  let s:link .= '\(https\?\|s\?ftp\)'
let s:link .= '\([A-Za-z]\+://'
"let s:link .=   '\(' . l:username_character 
"let s:link .=     '\(:' . l:password_character . '*\)\?'
"let s:link .=   '@\)\?'
let s:link .= '\)\?'

" Domain name
"let s:link .= '\(' . l:hostname_character . '\+\.\)\+'
"let s:link .= l:hostname_character . '\+'

" Path
"let s:link .= '\(/' . l:pathname_character . '*\)\?'
"let s:link .= ''

