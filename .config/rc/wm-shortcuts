## The Computer
|super {{, alt, ctrl a; super, ctrl alt}} Return| {{$TERMINAL, alacritty, st, sakura}} -e tmux.sh open
|super shift {{, alt, ctrl, ctrl alt}} Return| {{$TERMINAL, alacritty, st, sakura}}

|super shift ctrl q| kill "$(xprop -id "$(xprop -root 32x '\t$0' _NET_ACTIVE_WINDOW | cut -f 2)" '\t$0' _NET_WM_PID | cut -f 2)"

# I3 specific stuff
!super shift q! kill window
# Best to hard code this in case we make a mistake
!super d! dmenu_run
!super {{1,2,3,4,5,6,7,8,9,0}}! swap to workspace {{1,2,3,4,5,6,7,8,9,10}}
!super shift {{1,2,3,4,5,6,7,8,9,0}}! move current workspace to
!super r ; super r! reload window manager config
!super r ; super {{h, Left, k, Up}}! shrink window size
!super r ; super {{j, Down, l, Right, semicolon}}! grow window size
!super {{i, shift i}}! inner gaps
!super {{o, shift o}}! outer gaps
!super shift f! fullscreen toggle
!super {{h, Left, j, Down, k, Up, l, Right, semicolon}}! focus window
!super shift {{h, Left, j, Down, k, Up, l, Right, semicolon}}! move window
!super shift space! floating toggle

|super + BackSpace ; super + q| sudo zzz -z
|super + BackSpace ; super + {{w, e, r, BackSpace}}|
  printf %s\\n No Yes | dmenu -i -p {{\
    "Hibernate?"  | grep -q "Yes" && sudo zzz -Z, \
    "Shutdown?"   | grep -q "Yes" && sudo shutdown -h now, \
    "Reboot?"     | grep -q "Yes" && sudo reboot, \
    "Close Xorg?" | grep -q "Yes" && killall Xorg \
  }}
|super + BackSpace ; super + t| xlock -mode blank


# Main
|Print| flameshot gui
|super + shift + Insert|
  notify.sh "Clipboard: $(xclip -o -selection clipboard)"
  notify.sh "Primary: $(xclip -o -selection primary)"
|{{XF86MonBrightnessUp, XF86MonBrightnessDown}}| xbacklight {{+ 10,- 10}}; statusbar-startrefresh.sh
|super space ; super {{w, e, a, s, z, m, n}}| {{
  $TERMINAL -e sh -c 'echo "nmcli"; echo "===="; sudo nmtui'; statusbar-startrefresh.sh,
  $TERMINAL -e emacs-sandbox.sh -P -O d "${EMACSINIT}",
  $TERMINAL -e alsamixer; statusbar-startrefresh.sh,
  $TERMINAL -e syncthing -no-browser,
  $TERMINAL -e htop,
  $TERMINAL -e tmux.sh open mw.sh,
  $TERMINAL -e tmux.sh open newsboat
}}
#|super shift c| $TERMINAL -e calcurse -D ~/.config/calcurse
# Camera
#|super space ; super c| mpv --no-osc --no-input-default-bindings --input-conf=/dev/null --title='mpvfloat' /dev/video0
#|super space ; super m| $TERMINAL -e ncmpcpp
#|XF86AudioMute| amixer sset Master toggle; statusbar-startrefresh.sh
#|XF86Audio{{Raise,Lower}}Volume| amixer sset Master 5%{{+,-}}; statusbar-startrefresh.sh
#|XF86Audio{{Next,Prev}}| mpc {{next,prev}}
#|XF86Audio{Pause,Play,Stop}| mpc {{pause,play,stop}}


################################################################################
# Cheat sheets and copy
#
# Old comments:
# clipboard.sh seems to need setsid after `$TERMINAL -e`
# browser.sh seems to need 'nohup' and 'setsid' after 'exec' (interior details)
|super g ; super {{s, b, g}}| $TERMINAL -t 'fullscreen_overlay' -e sh -c 'tmux.sh open browser.sh menu {{search, bookmark, link}}'
|super c ; super {{s, b, g}}| $TERMINAL -t 'fullscreen_overlay' -e sh -c '
  url="$( browser.sh print {{search, bookmark, link}}; printf a )"
  url="${url%a}" # preserve and cut the $() newline shreding
  setsid clipboard.sh -w "${url}"
  '

|super g ; super {{a, e}}| handle.sh gui --file "$DOTENVIRONMENT/notes/cheatsheets/{{asciidoc-syntax-quick-reference.pdf,emacs_cheatsheet.pdf}}"
|super + c ; super + e| $TERMINAL -t 'fullscreen_overlay' -e sh -c 'setsid clipboard.sh -w "$(<~/.config/emoji fzf | cut -d " " -f 1)"'
|super + c ; super + c| printf %s '' | dmenu -p "Write to clipboard:" | setsid clipboard.sh --write



# Zhengma
#|super g ; super {{m, p}}|
#  st -t 'fullscreen_overlay' -e sh -c '
#  sleep 0.1
#  fcitx-remote -s pinyin
#  <{{~/interim/ref/fcitx-table-extra/tables/zhengma-large.txt, \
#    "$DOTENVIRONMENT/notes/language/zhengma-parts.adoc"}} \
#    fzf'
#  fcitx-remote -s zhengma


# Fcitx
# You can find these names at "$XDG_CONFIG_HOME/fcitx/profile"
|super u ; super q ; super {{q, w, e}}| notify.sh {{"en","en-pinyin","XSampa"}}; \
  fcitx5-remote -s {{keyboard-us-alt-intl-unicode      ,keyboard-cn-altgr-pinyin      ,ipa-x-sampa}};\
  fcitx-remote -s  {{fcitx-keyboard-us-alt-intl-unicode,fcitx-keyboard-cn-altgr-pinyin,ipa-x-sampa}}
|super u ; super w ; super {{q, w, e}}| notify.sh {{"jp-mozc","jp-anthy","jp-kkc"  }}; fcitx5-remote -s {{mozc         ,anthy ,kkc}};         fcitx-remote -s {{mozc         ,anthy ,kkc}}
|super u ; super e ; super {{q, w, e}}| notify.sh {{"array30","zh"      ,"tw"      }}; fcitx5-remote -s {{array30-large,pinyin,chewing}};     fcitx-remote -s {{array30-large,pinyin,chewing}}
|super u ; super r ; super {{q, w, e}}| notify.sh {{"zhengma","rime"    ,"jyutping"}}; fcitx5-remote -s {{zhengma-large,rime  ,jyutping-ca}}; fcitx-remote -s {{zhengma-large,rime  ,jyutping-ca}}
|super u ; super t ; super q| notify.sh "kr"; fcitx-remote -s hangul

|super shift a| fcitx-remote -o
